// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Backend.DB;
using Backend;

#nullable disable

namespace WebApi.Migrations
{
    [DbContext(typeof(PostgresContext))]
    [Migration("20240415091418_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.HasPostgresExtension(modelBuilder, "pg_catalog", "adminpack");
            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("WebApi.DB.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityAlwaysColumn(b.Property<int>("Id"));

                    b.Property<int>("Amount")
                        .HasColumnType("integer")
                        .HasColumnName("amount");

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("character varying")
                        .HasColumnName("brand");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("character varying")
                        .HasColumnName("category");

                    b.Property<int>("Minamount")
                        .HasColumnType("integer")
                        .HasColumnName("minamount");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric")
                        .HasColumnName("price");

                    b.Property<int>("Providerid")
                        .HasColumnType("integer")
                        .HasColumnName("providerid");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("character varying")
                        .HasColumnName("title");

                    b.HasKey("Id")
                        .HasName("products_pk");

                    b.HasIndex("Providerid");

                    b.ToTable("products", (string)null);
                });

            modelBuilder.Entity("WebApi.DB.Provider", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityAlwaysColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("character varying")
                        .HasColumnName("email");

                    b.Property<string>("Info")
                        .IsRequired()
                        .HasColumnType("character varying")
                        .HasColumnName("info");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("character varying")
                        .HasColumnName("number");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("character varying")
                        .HasColumnName("title");

                    b.HasKey("Id")
                        .HasName("provider_pk");

                    b.ToTable("provider", (string)null);
                });

            modelBuilder.Entity("WebApi.DB.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityAlwaysColumn(b.Property<int>("Id"));

                    b.Property<string>("Role1")
                        .IsRequired()
                        .HasColumnType("character varying")
                        .HasColumnName("role");

                    b.HasKey("Id")
                        .HasName("role_pk");

                    b.ToTable("role", (string)null);
                });

            modelBuilder.Entity("WebApi.DB.Supply", b =>
                {
                    b.Property<int>("Amount")
                        .HasColumnType("integer")
                        .HasColumnName("amount");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date")
                        .HasColumnName("date");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityAlwaysColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Pricebyone")
                        .HasColumnType("numeric")
                        .HasColumnName("pricebyone");

                    b.Property<int>("Productid")
                        .HasColumnType("integer")
                        .HasColumnName("productid");

                    b.Property<int>("Providerid")
                        .HasColumnType("integer")
                        .HasColumnName("providerid");

                    b.HasIndex("Productid");

                    b.HasIndex("Providerid");

                    b.ToTable("supplies", (string)null);
                });

            modelBuilder.Entity("WebApi.DB.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityAlwaysColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("character varying")
                        .HasColumnName("email");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("character varying")
                        .HasColumnName("name");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("character varying")
                        .HasColumnName("password");

                    b.Property<int>("Roleid")
                        .HasColumnType("integer")
                        .HasColumnName("roleid");

                    b.HasKey("Id")
                        .HasName("user_pk");

                    b.HasIndex("Roleid");

                    b.ToTable("user", (string)null);
                });

            modelBuilder.Entity("WebApi.DB.Product", b =>
                {
                    b.HasOne("WebApi.DB.Provider", "Provider")
                        .WithMany("Products")
                        .HasForeignKey("Providerid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("products_provider_fk");

                    b.Navigation("Provider");
                });

            modelBuilder.Entity("WebApi.DB.Supply", b =>
                {
                    b.HasOne("WebApi.DB.Product", "Product")
                        .WithMany()
                        .HasForeignKey("Productid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("supplies_products_fk");

                    b.HasOne("WebApi.DB.Provider", "Provider")
                        .WithMany()
                        .HasForeignKey("Providerid")
                        .IsRequired()
                        .HasConstraintName("supplies_provider_fk");

                    b.Navigation("Product");

                    b.Navigation("Provider");
                });

            modelBuilder.Entity("WebApi.DB.User", b =>
                {
                    b.HasOne("WebApi.DB.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("Roleid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("user_role_fk");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("WebApi.DB.Provider", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("WebApi.DB.Role", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
